worlds["purple"] = "/Users/json/src/purple.mc/world"
worlds["purple_nether"] = "/Users/json/src/purple.mc/world_nether"

# default textures
#texturepath = "/Users/json/src/purple-overviewer/textures/1.16.4.jar"

# custom textures
texturepath = "/Users/json/src/purple-overviewer/textures"

# output directory
outputdir = "/Users/json/src/purple-overviewer/maps"

processes = 8
defaultzoom = 5

def playerIcons(poi):
    if poi['id'] == 'Player':
        poi['icon'] = "https://freezion.com/assets/steve.png"
        return "Last known location for %s" % poi['EntityId']

def playerSpawns(poi):
    if poi['id']=='PlayerSpawn':
        poi['icon'] = "https://freezion.com/assets/bed.png"
        return "Spawn for %s" % poi['EntityId']

def signFilter(poi):
    if poi['id'] == 'Sign' or poi['id'] == 'minecraft:sign':
        poi['icon'] = "https://freezion.com/assets/sign.png"
        text = "\n".join(map(escape, [poi['Text1'], poi['Text2'], poi['Text3'], poi['Text4']]))
        if text.__contains__('...'):
            text.replace('...', '')

def chestFilter(poi):
    if poi['id'] == 'Chest' or poi['id'] == 'minecraft:chest':
        return "Chest with %d items" % len(poi['Items'])

markerList = [
    dict(name="Players", filterFunction=playerIcons),
    dict(name="Beds", filterFunction=playerSpawns),
    dict(name="Signs", filterFunction=signFilter),
    #dict(name="Chests", filterFunction=chestFilter)
]

renders["day_complete_smooth"] = {
    'world': 'purple',
    'title': 'Day',
    'rendermode': 'smooth_lighting',
    "dimension": "overworld",
    'markers': markerList
}

renders["night_complete"] = {
     'world': 'purple',
     'title': 'Night',
     'rendermode': 'smooth_night',
     "dimension": "overworld",
     'markers': markerList
}

renders["nether"] = {
     "world": "purple_nether",
     "title": "Nether",
     "rendermode": "nether",
     "dimension": "nether",
     'crop': (-500, -500, 500, 500)
 }
